<?xml version="1.0" encoding="UTF-8"?>
<shelfDocument>
  <!-- This file contains definitions of shelves, toolbars, and tools.
 It should not be hand-edited when it is being used by the application.
 Note, that two definitions of the same element are not allowed in
 a single file. -->

  <toolshelf name="nm_support" label="Nagamochi Support">
    <memberTool name="nm_sop_source_smoke"/>
    <memberTool name="nm_source_burn"/>
    <memberTool name="nm_sop_dopsop_pyro"/>
    <memberTool name="nm_sop_dopsop_bullet"/>
    <memberTool name="nm_sop_dopsop_bulletEmit"/>
    <memberTool name="nm_sop_dopimport_pyro"/>
    <memberTool name="nm_sop_dopimport_rbdbullet"/>
    <memberTool name="nm_obj_workgeo"/>
    <memberTool name="nm_make_helpcard"/>
  </toolshelf>

  <tool name="nm_source_burn" label="Source Fire" icon="SHELF_fire">
    <toolMenuContext name="network">
      <contextNetType>SOP</contextNetType>
    </toolMenuContext>
    <toolSubmenu>Nagamochi Support</toolSubmenu>
    <script scriptType="python"><![CDATA[import nmSupport.sop_dopsource as dopsource
reload(dopsource)
sels = hou.selectedNodes()

if len(sels)>0:
    n = sels[0]
    dopsource.run(n,simtype='burn')]]></script>
  </tool>

  <tool name="nm_sop_source_smoke" label="Source Smoke" icon="SHELF_smoke_heavy">
    <toolMenuContext name="viewer">
      <contextNetType>SOP</contextNetType>
    </toolMenuContext>
    <toolMenuContext name="network">
      <contextNetType>SOP</contextNetType>
    </toolMenuContext>
    <toolSubmenu>Nagamochi Support</toolSubmenu>
    <script scriptType="python"><![CDATA[import nmSupport.sop_dopsource as dopsource
reload(dopsource)
sels = hou.selectedNodes()


if len(sels)>0:
    n = sels[0]
    dopsource.run(n,simtype='billowySmoke')
else:
    text = 'Please select a node'
    hou.ui.displayMessage(text, buttons=("Yes",), severity=hou.severityType.Message, title="Ngamochi Support")

]]></script>
  </tool>

  <tool name="nm_sop_dopimport_pyro" label="DopImport Pyro" icon="hicon:/SVGIcons.index?SOP_object_merge.svg">
    <toolMenuContext name="network">
      <contextNetType>SOP</contextNetType>
    </toolMenuContext>
    <toolSubmenu>Nagamochi Support</toolSubmenu>
    <script scriptType="python"><![CDATA[import nmSupport.sop_dopimport as dopimport
reload(dopimport)
sels = hou.selectedNodes()

n = None
if len(sels)>0:
    n = sels[0]
dopimport.run(n,simtype='pyro')]]></script>
  </tool>

  <tool name="nm_sop_dopimport_rbdbullet" label="DopImport RBD Bullet" icon="hicon:/SVGIcons.index?SOP_object_merge.svg">
    <toolMenuContext name="network">
      <contextNetType>SOP</contextNetType>
    </toolMenuContext>
    <toolSubmenu>Nagamochi Support</toolSubmenu>
    <script scriptType="python"><![CDATA[import nmSupport.sop_dopimport as dopimport
reload(dopimport)
sels = hou.selectedNodes()

n = None
if len(sels)>0:
    n = sels[0]
dopimport.run(n,simtype='rbd')]]></script>
  </tool>

  <tool name="nm_sop_dopsop_pyro" label="DopSop Pyro(Smoke)" icon="SHELF_smoke_heavy">
    <toolMenuContext name="network">
      <contextNetType>SOP</contextNetType>
    </toolMenuContext>
    <toolSubmenu>Nagamochi Support</toolSubmenu>
    <script scriptType="python"><![CDATA[import nmSupport.gallery_import as gallery_import
reload(gallery_import)

sels = hou.selectedNodes()

n = None
if len(sels)>0:
    n = sels[0]
gallery_import.run(n,doptype='pyro_smoke',pane=kwargs["pane"])
]]></script>
  </tool>

  <tool name="nm_sop_dopsop_bullet" label="DopSop RBD" icon="DOP_rbdpackedobject">
    <toolMenuContext name="network">
      <contextNetType>SOP</contextNetType>
    </toolMenuContext>
    <toolSubmenu>Nagamochi Support</toolSubmenu>
    <script scriptType="python"><![CDATA[import nmSupport.gallery_import as gallery_import
reload(gallery_import)

sels = hou.selectedNodes()

n = None
if len(sels)>0:
    n = sels[0]
gallery_import.run(n,doptype='rbdbullet',pane=kwargs["pane"])
]]></script>
  </tool>

  <tool name="nm_sop_dopsop_bulletEmit" label="DopSop RBD (Emit)" icon="DOP_rbdpackedobject">
    <toolMenuContext name="network">
      <contextNetType>SOP</contextNetType>
    </toolMenuContext>
    <toolSubmenu>Nagamochi Support</toolSubmenu>
    <script scriptType="python"><![CDATA[import nmSupport.gallery_import as gallery_import
reload(gallery_import)

sels = hou.selectedNodes()

n = None
if len(sels)>0:
    n = sels[0]
gallery_import.run(n,doptype='rbdbullet_emit',pane=kwargs["pane"])
]]></script>
  </tool>

  <tool name="nm_obj_workgeo" label="Work Geo" icon="OBJ_geo">
    <toolMenuContext name="network">
      <contextNetType>OBJ</contextNetType>
    </toolMenuContext>
    <toolSubmenu>Nagamochi</toolSubmenu>
    <script scriptType="python"><![CDATA[import nmSupport.createWorkGeo as createWorkGeo
reload(createWorkGeo)
pane=kwargs["pane"]
createWorkGeo.run(pane)
]]></script>
  </tool>

  <tool name="nm_make_helpcard" label="Make Help" icon="hicon:/SVGIcons.index?BUTTONS_help.svg">
    <helpText><![CDATA["""Create Help. Copy to Clipbord and Create .txt into $HIP"""]]></helpText>
    <script scriptType="python"><![CDATA[import createHelpTemplate as cth

cth.doit()]]></script>
  </tool>
</shelfDocument>
